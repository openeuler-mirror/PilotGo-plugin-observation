LIBBPF_0.0.1 {
	global:
		bpf_btf_get_fd_by_id;
		bpf_map__btf_key_type_id;
		bpf_map__btf_value_type_id;
		bpf_map__fd;
		bpf_map__name;
		bpf_map__pin;
		bpf_map__reuse_fd;
		bpf_map__set_ifindex;
		bpf_map__set_inner_map_fd;
		bpf_map__unpin;
		bpf_map_delete_elem;
		bpf_map_get_fd_by_id;
		bpf_map_get_next_id;
		bpf_map_get_next_key;
		bpf_map_lookup_and_delete_elem;
		bpf_map_lookup_elem;
		bpf_map_update_elem;
		bpf_obj_get;
		bpf_obj_get_info_by_fd;
		bpf_obj_pin;
		bpf_object__btf_fd;
		bpf_object__close;
		bpf_object__find_map_by_name;
		bpf_object__kversion;
		bpf_object__load;
		bpf_object__name;
		bpf_object__open;
		bpf_object__pin;
		bpf_object__pin_maps;
		bpf_object__pin_programs;
		bpf_object__unpin_maps;
		bpf_object__unpin_programs;
		bpf_prog_attach;
		bpf_prog_detach;
		bpf_prog_detach2;
		bpf_prog_get_fd_by_id;
		bpf_prog_get_next_id;
		bpf_prog_query;
		bpf_program__fd;
		bpf_program__pin;
		bpf_program__set_expected_attach_type;
		bpf_program__set_ifindex;
		bpf_program__set_type;
		bpf_program__unload;
		bpf_program__unpin;
		bpf_prog_linfo__free;
		bpf_prog_linfo__new;
		bpf_prog_linfo__lfind_addr_func;
		bpf_prog_linfo__lfind;
		bpf_raw_tracepoint_open;
		bpf_task_fd_query;
		btf__fd;
		btf__find_by_name;
		btf__free;
		btf__name_by_offset;
		btf__new;
		btf__resolve_size;
		btf__resolve_type;
		btf__type_by_id;
		libbpf_attach_type_by_name;
		libbpf_get_error;
		libbpf_prog_type_by_name;
		libbpf_set_print;
		libbpf_strerror;
	local:
		*;
};

LIBBPF_0.0.2 {
	global:
		bpf_map_lookup_elem_flags;
		bpf_object__btf;
		bpf_object__find_map_fd_by_name;
		btf__get_raw_data;
		btf_ext__free;
		btf_ext__get_raw_data;
		btf_ext__new;
} LIBBPF_0.0.1;

LIBBPF_0.0.3 {
	global:
		bpf_map__is_internal;
		bpf_map_freeze;
} LIBBPF_0.0.2;

LIBBPF_0.0.4 {
	global:
		bpf_link__destroy;
		bpf_program__attach_kprobe;
		bpf_program__attach_perf_event;
		bpf_program__attach_raw_tracepoint;
		bpf_program__attach_tracepoint;
		bpf_program__attach_uprobe;
		btf_dump__dump_type;
		btf_dump__free;
		btf__parse_elf;
		libbpf_num_possible_cpus;
		perf_buffer__free;
		perf_buffer__poll;
} LIBBPF_0.0.3;

LIBBPF_0.0.5 {
	global:
		bpf_btf_get_next_id;
} LIBBPF_0.0.4;

LIBBPF_0.0.6 {
	global:
		bpf_map__get_pin_path;
		bpf_map__is_pinned;
		bpf_map__set_pin_path;
		bpf_object__open_file;
		bpf_object__open_mem;
		bpf_program__attach_trace;
		bpf_program__get_expected_attach_type;
		bpf_program__get_type;
		btf__find_by_name_kind;
		libbpf_find_vmlinux_btf_id;
} LIBBPF_0.0.5;

LIBBPF_0.0.7 {
	global:
		btf_dump__emit_type_decl;
		bpf_link__disconnect;
		bpf_map__attach_struct_ops;
		bpf_map_delete_batch;
		bpf_map_lookup_and_delete_batch;
		bpf_map_lookup_batch;
		bpf_map_update_batch;
		bpf_object__find_program_by_name;
		bpf_object__attach_skeleton;
		bpf_object__destroy_skeleton;
		bpf_object__detach_skeleton;
		bpf_object__load_skeleton;
		bpf_object__open_skeleton;
		bpf_program__attach;
		bpf_program__name;
		btf__align_of;
		libbpf_find_kernel_btf;
} LIBBPF_0.0.6;